[env]
extra_scripts = 
	pre:ardwiino_script_pre.py
	post:ardwiino_script_post.py

; Raspberry Pi Pico boards
[pico_parent]
board_upload.ardwiino_bootloader_teensy = true
board_build.use_usb = 1
platform = https://github.com/maxgerhardt/platform-raspberrypi/archive/39b90392af50585e429941bd2561a91949a2ba46.zip@1.15.0
platform_packages =
   framework-arduinopico@https://github.com/Santroller/arduino-pico/releases/download/4.6.3-sanjay/rp2040-4.6.3-sanjay.zip@1.40404.0
board = pico
framework = arduino
board_build.core = earlephilhower
debug_tool = cmsis-dap
; upload_protocol=picoprobe
build_flags = 
	-DPIO_USB_DP_PIN_DEFAULT=20
	-Isrc/pico 
	-DPIO_FRAMEWORK_ARDUINO_NO_USB
	; Core Configuration
	; Sets the primary device type. 1 = GAMEPAD
	-DDEVICE_TYPE=1
	; Allows build without a static config array by using pointers instead.
	-DCONFIGURABLE_BLOBS
	; Hardware Pin & LED Configuration
	; Placeholder for pin initialization code.
	-DPIN_INIT=
	; Placeholder for LED initialization code.
	-DLED_INIT=
	; Number of standard LEDs. 0 = disabled.
	-DLED_COUNT=0
	; Number of LEDs on a peripheral. 0 = disabled.
	-DLED_COUNT_PERIPHERAL=0
	; Number of LEDs that require debouncing.
	-DLED_DEBOUNCE_COUNT=0
	; Default LED brightness (0-255).
	-DLED_BRIGHTNESS=100
	; GPIO pin for sleep mode. -1 = disabled.
	-DSLEEP_PIN=-1
	; Logic level for sleep pin.
	-DSLEEP_ACTIVE_HIGH=0
	; Inactivity timeout for auto-sleep in seconds. 0 = disabled.
	-DSLEEP_INACTIVITY_TIMEOUT_SEC=0
	; Input Processing Configuration
	; Number of digital button inputs. 16 is a safe value for a generic gamepad.
	-DDIGITAL_COUNT=16
	; Use an input queue. 0 = disabled.
	-DINPUT_QUEUE=0
	; USB polling rate in ms. 1 = 1000Hz.
	-DPOLL_RATE=1
	; Low-pass filter alpha for accelerometer.
	-DLOW_PASS_ALPHA=0.5
	; Swap A/B and X/Y buttons for Nintendo layout. 0 = disabled.
	-DSWAP_SWITCH_FACE_BUTTONS=0
	; Controller Emulation & Miscellaneous
	; Board name for USB descriptor.
	-DARDWIINO_BOARD="\"Pico\""
	; Length of the config array, used for bounds checking.
	-DCONFIGURATION_LEN=0
	; Use XInput protocol on Windows. 1 = enabled.
	-DWINDOWS_USES_XINPUT=1
	; Enable RPCS3 (PS3 emulator) compatibility workarounds. 0 = disabled.
	-DRPCS3_COMPAT=0
	; Placeholders for protocol-specific tick functions.
	-DTICK_SHARED=
	-DTICK_DETECTION=
	-DTICK_OG_XBOX=
	-DTICK_XINPUT=
	-DTICK_PS4=
	-DTICK_PC=
	-DTICK_PS3_WITHOUT_CAPTURE=
	-DTICK_PS3=
	-DTICK_RESET=
	; Placeholders for LED and rumble handlers.
	-DHANDLE_AUTH_LED=
	-DHANDLE_PLAYER_LED=
	-DHANDLE_LIGHTBAR_LED=
	-DHANDLE_RUMBLE=
	-DHANDLE_RUMBLE_EXPANDED=
	-DHANDLE_KEYBOARD_LED=
build_src_filter = 
	+<pico>
	+<shared>
lib_deps = 
	https://github.com/Santroller/USB_Host_Shield_2.0/archive/refs/heads/master.zip@1.6.3
	https://github.com/FortySevenEffects/arduino_midi_library/archive/refs/tags/5.0.2.zip@5.0.2
	SPI
[pico]
extends = pico_parent
platform_packages =
   tool-openocd-rp2040-earlephilhower@file://pio_packages/empty2
   tool-mklittlefs-rp2040-earlephilhower@file://pio_packages/empty2
   ${pico_parent.platform_packages}

[env:pico]
extends = pico
upload_protocol=mbed
board_upload.use_1200bps_touch=False

[env:pico_slave]
extends = pico
upload_protocol=mbed
build_src_filter = 
	+<pico_slave>

[env:pico_slave_debug]
extends = pico_parent
build_flags = 
	-DDEBUG_RP2040_PORT=Serial1
	${pico.build_flags}
build_src_filter = 
	+<pico_slave>

[env:pico_debug]
extends = pico_parent
build_flags = 
	-DDEBUG_RP2040_PORT=Serial1
	${pico.build_flags}

[env:picow]
extends = pico
board = rpipicow
upload_protocol=mbed
board_upload.use_1200bps_touch=False
build_flags = 
	-DPIO_FRAMEWORK_ARDUINO_ENABLE_BLUETOOTH=1
	-DARDUINO_RASPBERRY_PI_PICO_W=1
	-DENABLE_BLE
	${pico.build_flags}

[env:picow_debug]
extends = pico_parent
board = rpipicow
build_flags = 
	-DDEBUG_RP2040_PORT=Serial1
	${env:picow.build_flags}

[env:pico2]
board = rpipico2
extends = pico
upload_protocol=mbed
board_upload.use_1200bps_touch=False

[env:pico2_debug]
board = rpipico2
extends = pico_parent
build_flags = 
	-DDEBUG_RP2040_PORT=Serial1
	${pico.build_flags}

[env:pico2_slave]
board = rpipico2
extends = pico
upload_protocol=mbed
build_src_filter = 
	+<pico_slave>

[env:pico2_slave_debug]
board = rpipico2
extends = pico_parent
build_flags = 
	-DDEBUG_RP2040_PORT=Serial1
	${pico.build_flags}
build_src_filter = 
	+<pico_slave>


[env:pico2w]
extends = pico
board = rpipico2w
upload_protocol=mbed
board_upload.use_1200bps_touch=False
build_flags = 
	-DPIO_FRAMEWORK_ARDUINO_ENABLE_BLUETOOTH=1
	-DARDUINO_RASPBERRY_PI_PICO_W=1
	-DENABLE_BLE
	${pico.build_flags}

[env:pico2w_debug]
extends = pico_parent
board = rpipico2w
build_flags = 
	-DDEBUG_RP2040_PORT=Serial1
	${env:pico2w.build_flags}